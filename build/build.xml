<?xml version="1.0" encoding="iso-8859-1"?>

<!--
	jQuery UX Forms

	Call task called 'deploy-release' to build a full release.
	The release built will be stored on 'dist' dir.

	This build file was adapted from jQuery UI.
-->

<project name="jquery-ux-forms" default="deploy-release" basedir="..">
	<!-- Project Settings -->
	<property file="ant.properties" />
	<loadfile failonerror="yes" srcFile="./version.txt" property="ant.project.version">
		<filterchain><striplinebreaks/></filterchain>
	</loadfile>

	<!-- Path Settings -->
	<property name="dir.build"	value="${basedir}/build" />
	<property name="dir.dist"	value="${basedir}/dist/${ant.project.name}-${ant.project.version}" />
	<property name="dir.src"	value="${basedir}/ux" />


	<!-- Load Ant-Contrib Extention -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${dir.build}/lib/ant-contrib-1.0_b3.jar" />
		</classpath>
	</taskdef>

	<!-- External Jars -->
	<property description="Google Closure" name="jar.closure" value="${dir.build}/lib/closure-compiler-20111114.jar" />
	<property description="YUI Compressor" name="jar.yuicompressor" value="${dir.build}/lib/yuicompressor-2.4.7.jar" />


	<target name="clean" description="Remove generated files">
		<delete dir="${dir.dist}" />
    </target>

	
	<target name="copy" description="Copy needed folders">
		<echo message="Copying files..." />
		<mkdir dir="${dir.dist}" />
		
		<!-- Copy over existing external dependencies -->
		<copy overwrite="true" todir="${dir.dist}">
			<fileset dir="${basedir}">
				<include name="*.txt" />
				<include name="jquery-*.js" />
				<include name="**/jquery.*.js" />
				<include name="demos/**/*" />
				<include name="themes/**/*" />
			</fileset>
		</copy>
		
		<echo message="Files copied." />
	</target>

	
	<target name="concatenate" description="Merges all files into a single file">
		<echo message="Concatenating files..." />
		
		<!-- Create a folder and remove the old file -->
		<mkdir dir="${dir.dist}/ux" />
		<mkdir dir="${dir.dist}/themes/ux" />
		<delete file="${dir.dist}/ux/${ant.project.name}-${ant.project.version}.js" />
		<delete file="${dir.dist}/themes/ux/${ant.project.name}-${ant.project.version}.css" />

		<!-- Create 1 file from all js files in src dir -->
		<concat destfile="${dir.dist}/ux/${ant.project.name}-${ant.project.version}.js">
			<!-- Because order matters, inputbox must come before the reset of the ux items -->
			<fileset dir="${dir.src}">
				<include name="jquery.ui.*.js" />
				<include name="jquery.ux.inputbox.js" />
			</fileset>

			<fileset dir="${dir.src}">
				<include name="jquery.ux.*.js" />
				<exclude name="jquery.ux.inputbox.js" />
			</fileset>
		</concat>
		
		<!-- Create 1 file from all css files in themes/ux dir -->
		<concat destfile="${dir.dist}/themes/ux/${ant.project.name}-${ant.project.version}.css">
			<fileset dir="themes/ux" includes="jquery.*.css" excludes="jquery.ux.all.css" />
		</concat>
		
		<echo message="Concatenation complete." />
	</target>
	
	
	<target name="minify" depends="concatenate" description="Remove all comments and whitespace, no compression, great in combination with GZip">
		<echo message="Minifing files.." />
		<mkdir dir="${dir.dist}/ux/minified" />
		<mkdir dir="${dir.dist}/themes/ux/minified" />
		
		<parallel threadsperprocessor="1">
			<apply executable="java" parallel="false">
				<fileset dir="${dir.dist}/ux" includes="*.js" />
				<arg line="-jar" />
				<arg path="${jar.closure}" />
				<arg value="--warning_level" />
				<arg value="QUIET" />
				<arg value="--js_output_file" />
				<targetfile />
				<arg value="--js" />
				<mapper type="glob" from="*.js" to="${dir.dist}/ux/minified/*.min.js" />
			</apply>

			<apply executable="java" parallel="false">
				<fileset dir="${dir.dist}/themes/ux" includes="*.css" />
				<arg line="-jar" />
				<arg path="${jar.yuicompressor}" />
				<arg line="--charset utf-8" />
				<arg line="-v" />
				<srcfile />
				<arg line="-o" />
				<mapper type="glob" from="*.css" to="${dir.dist}/themes/ux/minified/*.min.css" />
				<targetfile/>
			</apply>
		</parallel>

		<replaceregexp match=".css" replace=".min.css" flags="g">
			<fileset dir="${dir.dist}/themes/ux/minified">
				<include name="*.all.min.css"/>
			</fileset>
		</replaceregexp>

		<!-- make a copy of all theme images to ensure that relative paths in minified css files work -->
		<copy todir="${dir.dist}/themes/ux/minified/images" >
			<fileset dir="themes/ux/images" />
		</copy>

		<echo message="Minification complete." />
	</target>

	
	<target name="replace-version">
		<replaceregexp match="@VERSION" replace="${ant.project.version}" flags="g" byline="true">
		    <fileset dir="${dir.dist}/ux" includes="*.js"/>
			<fileset dir="${dir.dist}/ux/minified" includes="*.js"/>
			<fileset dir="${dir.dist}/themes/ux" includes="*.css"/>
			<fileset dir="${dir.dist}/themes/ux/minified" includes="*.css"/>
		</replaceregexp>
		<echo message="Replaced all @VERSION to ${ant.project.version}." />
	</target>


	<target name="prepend-header">
		<mkdir dir="${dir.dist}/headers" />
		
		<copy todir="${dir.dist}/headers">
			<fileset dir="${dir.dist}/ux" includes="*.js" />
			<fileset dir="${dir.dist}/themes/ux" includes="*.css" />
		</copy>
		<replaceregexp match="^(\/\*.*?\*\/\s).+" replace="\1" flags="s">
		    <fileset dir="${dir.dist}/headers">
				<include name="*.js"/>
				<include name="*.css"/>
			</fileset>
		</replaceregexp>

		<for param="file">
			<path>
				<fileset dir="${dir.dist}/ux/minified" includes="*.js" />
				<fileset dir="${dir.dist}/themes/ux/minified" includes="*.css" />
			</path>
			<sequential>
				<propertyregex override="yes" property="ext" input="@{file}" regexp=".*[\\/].+\.min\.(.+)$" replace="\1"/>
				<propertyregex override="yes" property="target" input="@{file}" regexp=".*[\\/](.+)\.min\.${ext}$" replace="\1"/>
				<concat destfile="${dir.dist}/ux-headered/${target}.min.${ext}">
					<header file="${dir.dist}/headers/${target}.${ext}" />
					<fileset file="@{file}" />
				</concat>
			</sequential>
		</for>
		
		<copy todir="${dir.dist}/ux/minified" overwrite="true">
			<fileset dir="${dir.dist}/ux-headered/" includes="*.js" />
		</copy>

		<copy todir="${dir.dist}/themes/ux/minified" overwrite="true">
			<fileset dir="${dir.dist}/ux-headered/" includes="*.css" />
		</copy>

		<delete dir="${dir.dist}/headers/" />
		<delete dir="${dir.dist}/ux-headered/" />
	</target>


	<target description="Zip the package" name="zip">
		<zip destfile="${dir.dist}/../${ant.project.name}-${ant.project.version}.zip">
			<zipfileset dir="dist/" />
		</zip>
	</target>

	
	<target name="deploy-release" depends="clean, copy, minify, replace-version, prepend-header, zip" description="Release builder">
	</target>
</project>
